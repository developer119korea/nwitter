{"version":3,"sources":["fbase.js","compoenents/AuthForm.js","routes/Auth.js","compoenents/Nweet.js","compoenents/NweetFactory.js","routes/Home.js","routes/Profile.js","compoenents/Navigation.js","compoenents/Router.js","compoenents/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","vlaue","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","sytle","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fec184be.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUR_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required vlaue={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? \"Sign In\" : \"Create Account\"} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {!newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"compoenents/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github\n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setNewNweet('');\n    toggleEditing();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus onChange={onChange} className=\"formInput\"></input>\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"></input>\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\n        </>\n      ) : (\n          <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (<img src={nweetObj.attachmentUrl} />)}\n            { isOwner && (\n              <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick} >\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing} >\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(null);\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment != null) {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(null);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input className=\"factoryInput__input\" value={nweet} onChange={onChange} text=\"text\" placeholder=\"what's on your mind?\" maxLength={120} />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add Photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0, }} />\n      {\n        attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img src={attachment} style={{ backgroundImage: attachment, }} />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )\n      }\n    </form>\n  );\n};\n\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"compoenents/Nweet\";\nimport NweetFactory from \"compoenents/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName} autoFocus className=\"formInput\" />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>Log out</span>\n    </div>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" sytle={{ marginRight: 10 }} >\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\" style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12 }} >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 프로필` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"compoenents/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div style={{ maxWidth: 890, width: \"100%\", margin: \"0 auto\", marginTop: 80, display: \"flex\", justifyContent: \"center\", }}>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      {init ? (<AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />) : (\"Initializing...\")}\n      {/* <footer>&copy;{new Date().getFullYear()} Nwitter </footer> */}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"compoenents/App\"\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}